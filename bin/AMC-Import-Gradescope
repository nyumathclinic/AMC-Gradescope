#!/usr/bin/env perl

=head1 NAME

AMC-import-gradescope.pl - Import scores from a Gradescope score file to an AMC database

=head1 SYNOPSIS

    $ AMC-import-gradescope --amckey=email --gskey=Email --qlist FR-Canada-ZIP-a FR-Canada-ZIP-b Midterm_I_Free_Response_scores.csv

Import from the file C<Midterm_I_Free_Response_scores.csv>.
Match the students by email addresses.
Import the first Gradescope question's scores to the AMC question titled C<FR-Canada-ZIP-a>, 
and the second Gradescope questions's scores to the AMC question titled C<FR-Canada-ZIP-b>

=head1 DESCRIPTION

=head1 COPYRIGHT

Copyright 2017.

Since AMC is GPL, I guess this package is, too.

No warranty!

=head1 AUTHOR

Matthew Leingang, leingang@nyu.edu

=cut

use Getopt::Long;
use Data::Dumper; # for debugging
use XML::Simple;
use Carp;

use FindBin qw($Bin);
use lib "$Bin/../lib";

# use AMC::Import::Gradescope;
use Gradescope::ScoresFile;
use AMC::Import::Gradescope;
use AMC::Basic;

my $project_dir = '.';
my $data_dir = '';
my $amc_key = '';
my $gs_key = '';
my $students_list = '';
my $debug, $verbose;
my $qlist=[];
my $qname_map={};

GetOptions(
    'debug'=>\$debug,
    'verbose'=>\$verbose,
    'project=s'=>\$project_dir,
    'data=s'=>\$data_dir, # you'd only want to set this to overload the project option
    'students_list=s'=>\$students_list,
    'amckey=s'=>\$amc_key,
    'gskey=s'=>\$gs_key,
    'qlist=s@{1,}'=>$qlist,
    'qmap=s%{1,}'=>$qname_map
);

my $gs_path = shift(@ARGV);

print Dumper({
    'debug'=>$debug,
    'verbose'=>$verbose,
    'project'=>$project_dir,
    'data'=>$data_dir,
    'amckey'=>$amc_key,
    'gskey'=>$gs_key,
    'qlist'=>$qlist,
    'qmap'=>$qname_map,    
    'gs_path'=>$gs_path
});


croak("Scoresfile '$gs_path' does not exist") if (!-f $gs_path);

$project_options = read_project_options($project_dir);

# $data_dir can be specified on the command line.
# If not, the current project's options file is read for it.
# If still not, croak.
$data_dir = $project_options->{'data'} unless $data_dir;
if(! -d $data_dir) {
    croak ("Data directory '$data_dir' does not exist");
}
# student list
# If not specified on CL, look in options.xml
if (!-f $students_list) {
    $students_list=$project_options->{'listeetudiants'};
    $students_list =~ s/%HOME/$ENV{'HOME'}/;
}
# keys
if (!$amc_key) {
    # optional arguments are supposed to be optional!
    # But having all these positional arguments on the command line
    # is a pain.
    #
    # Better: make a reasonable default.
    # The only AMC key we can count on is _ID_.
    # I think its value can be specified in AMC project options.
    croak("AMC key not specified.  Rerun with --amckey [key]");
}
if (!gs_key) {
    # Again, there is one known meaningful key and that's SID.
    # Right now that contains the NetID.
    croak("Gradescope key not specified.  Rerun with --gskey");
}

# This does NOT save warning messages to a file 'debug.log'.
# It DOES suppress htem from going to STDOUT/STDERR, whch is useful
# since I'm getting many warnings.
# I really want to use Log::Message::Simple or Log::Log4Perl.
# set_debug('debug.log');


###
# if qmap DNE and qlist does, construct qmap
my $gs = Gradescope::ScoresFile::new($gs_path);
if (!%$qname_map && @$qlist) {
    my @gs_qnames = $gs->question_heads;
    my @amc_qnames = @$qlist;
    my %hash;
    @hash{@gs_qnames} = @amc_qnames;
    print Dumper("hash: ", %hash);
    $qname_map = \%hash;
}

print "qname_map: ",  Dumper($qname_map);

croak("No questions to import") if !keys(%$qname_map);


my $importer = AMC::Import::Gradescope->new('datadir'=>$data_dir,'students_list'=>$students_list);
exit($importer->do_import($gs, $amc_key, $gs_key, $qname_map));


####
# This stuff should probably go in a separate package
sub read_project_options {
    # read options from project directory
    $dir = shift;
    $xml = new XML::Simple;
    return $xml->XMLin($dir . "/options.xml");
}

